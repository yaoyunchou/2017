{"version":3,"sources":["../../src/services/infomation.service.js"],"names":["request","require","iconv","FeedParser","schedule","Service","data","self","forEach","element","saveItem","title","link","description","pubDate","source","author","typeId","fetch","feed","posts","options","url","headers","req","timeout","pool","setMaxListeners","setHeader","feedparser","on","done","res","stream","charset","Array","statusCode","emit","Error","getUrlParam","test","decodeStream","pipe","err","console","log","infomationSvc","saveInfo","post","read","push","transToPost","string","name","reg","RegExp","r","match","unescape","mPost","arguments","rule","RecurrenceRule","dayOfWeek","Range","hour","minute","job","scheduleJob"],"mappings":"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","file":"infomation.service.js","sourcesContent":["var request = require('request'),\r\n\ticonv = require('iconv-lite'),\r\n\tFeedParser = require('feedparser');\r\nimport basService from \"../common/bas.service\";\r\nimport schema from \"../models/infomation.schema\";\r\nvar schedule = require(\"node-schedule\");\r\nclass Service extends basService {\r\n\tconstructor() {\r\n\t\tsuper('infomation', schema)\r\n    }\r\n    saveInfo(data){\r\n        var self = this;\r\n        data = data||[];\r\n        data.forEach(function(element) {\r\n            self.saveItem(element);\r\n        }, this);\r\n    }\r\n\tcreate() {\r\n\t\treturn {\r\n\t\t\ttitle: '',\r\n\t\t\tlink: '',\r\n\t\t\tdescription: '',\r\n\t\t\tpubDate: '',\r\n\t\t\tsource: '',\r\n\t\t\tauthor: '',\r\n\t\t\ttypeId: ''\r\n\r\n\t\t}\r\n\t}\r\n}\r\nfunction fetch(feed, typeId) {\r\n\tvar posts;\r\n\t// Define our streams  \r\n\r\n\tvar options = {\r\n\t\turl: feed,\r\n\t\theaders: {\r\n\t\t\t'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36',\r\n\t\t\t'accept': 'text/html,application/xhtml+xml'\r\n\t\t}\r\n\t};\r\n\tvar req = request(feed, {\r\n\t\ttimeout: 10000,\r\n\t\tpool: false\r\n\t});\r\n\treq.setMaxListeners(50);\r\n\t// Some feeds do not response without user-agent and accept headers.  \r\n\treq.setHeader('user-agent', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36')\r\n\t\t.setHeader('accept', 'text/html,application/xhtml+xml');\r\n\r\n\tvar feedparser = new FeedParser();\r\n\r\n\t// Define our handlers  \r\n\treq.on('error', done);\r\n\treq.on('response', function(res) {\r\n\t\tvar stream = this,\r\n\t\t\ticonv, charset;\r\n\t\tposts = new Array();\r\n\t\tif (res.statusCode != 200) return this.emit('error', new Error('Bad status code'));\r\n\t\tcharset = getUrlParam((res.headers['content-type'] || ''), \"charset\");\r\n\t\tif (!iconv && charset && !/utf-*8/i.test(charset)) {\r\n\t\t\ttry {\r\n\t\t\t\ticonv = iconv.decodeStream('utf-8');\r\n\t\t\t\t//iconv.on('error', done);\r\n\t\t\t\tstream = this.pipe(iconv);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tthis.emit('error', err);\r\n\t\t\t}\r\n\t\t}\r\n\t\tstream.pipe(feedparser);\r\n\t});\r\n\r\n\tfeedparser.on('error', done);\r\n\tfeedparser.on('end', function(err) {\r\n\t\tconsole.log(posts);\r\n\t\tinfomationSvc.saveInfo(posts);    //存到数据库  \r\n\t});\r\n\tfeedparser.on('readable', function() {\r\n\t\tvar post;\r\n\t\twhile (post = this.read()) {\r\n\t\t\tposts.push(transToPost(post)); //保存到对象数组\r\n\t\t}\r\n\t});\r\n\r\n\tfunction getUrlParam(string, name) {\r\n\t\tvar reg = new RegExp(name + \"=([^&]*)(&|$)\"); //构造一个含有目标参数的正则表达式对象\r\n\t\tvar r = string.match(reg); //匹配目标参数\r\n\t\tif (r != null) return unescape(r[1]);\r\n\t\treturn null; //返回参数值\r\n\t}\r\n\r\n\tfunction transToPost(post) {\r\n\t\tvar mPost = {\r\n\t\t\ttitle: post.title,\r\n\t\t\tlink: post.link,\r\n\t\t\tdescription: post.description,\r\n\t\t\tpubDate: post.pubDate,\r\n\t\t\tsource: post.source,\r\n\t\t\tauthor: post.author,\r\n\t\t\ttypeId: typeId\r\n\t\t};\r\n\t\t\r\n\t\treturn mPost;\r\n\t}\r\n\r\n\tfunction done() {\r\n\t\tconsole.log(arguments);\r\n\t}\r\n}\r\n\r\nvar infomationSvc = new Service();\r\nfetch('http://www.w3cplus.com/rss.xml', 1);\r\nvar rule = new schedule.RecurrenceRule();\r\n\r\n　　rule.dayOfWeek = [0, new schedule.Range(1, 6)];\r\n\r\n　　rule.hour = 0;\r\n\r\n　　rule.minute = 0;\r\n\r\n　　var job = schedule.scheduleJob(rule, function(){\r\n　　　　fetch('http://www.w3cplus.com/rss.xml', 1);\r\n　　});"]}