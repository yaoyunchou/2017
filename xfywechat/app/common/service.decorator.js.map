{"version":3,"sources":["../../src/common/service.decorator.js"],"names":["Service","SerCtrl","name","target","prototype","service"],"mappings":";;;;;kBAQwBA,O;AARxB;;;;;;;;AAQe,SAASA,OAAT,CAAiBC,OAAjB,EAAyBC,IAAzB,EAA8B;AACzC,WAAO,UAAUC,MAAV,EAAiB;AACpB,YAAG,OAAOA,MAAP,KAAkB,UAArB,EAAgC;AAC5BA,mBAAOC,SAAP,CAAiBJ,OAAjB,GAA2BC,OAA3B;AACAE,mBAAOC,SAAP,CAAiBC,OAAjB,GAA2B,IAAIJ,OAAJ,CAAYC,IAAZ,CAA3B;AACH;AACJ,KALD;AAMH","file":"service.decorator.js","sourcesContent":["/**\n * service的修饰器可以自动初始化方法\n * 不会用，看别人的代码所以来点心得  后面也会有类似的就不加这个备注了\n * 心得：\n * 下面的return是真正的内容，很巧妙的是这里吧serCtrl,name传进来了！！！这是我怎么都想不到的\n * @param  {} SerCtrl\n * @param  {} name\n */\nexport default function Service(SerCtrl,name){\n    return function (target){\n        if(typeof target === 'function'){\n            target.prototype.Service = SerCtrl;\n            target.prototype.service = new SerCtrl(name);\n        }\n    }\n}"]}