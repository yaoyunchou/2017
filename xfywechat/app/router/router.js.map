{"version":3,"sources":["../../src/router/router.js"],"names":["route","method","isAsync","target","name","descriptor","setTimeout","prefix","router","fixed_route","console","log","next","value","call","params","result","status","body"],"mappings":";;;;;;;;;;QAKgBA,K,GAAAA,K;;AAFhB;;;;;;2cAHA;;;;;AAKO,SAASA,KAAT,CAAeA,KAAf,EAAsBC,MAAtB,EAA8C;AAAA,QAAhBC,OAAgB,uEAAN,IAAM;;AACjD,WAAO,UAAUC,MAAV,EAAkBC,IAAlB,EAAwBC,UAAxB,EAAoC;AACvCC,mBAAW,YAAY;AAAC;AACpB,gBAAIC,SAASJ,OAAOK,MAAP,IAAiBL,OAAOK,MAAP,CAAcD,MAA5C;AAAA,gBACIE,WADJ;AAEA,gBAAIT,KAAJ,EAAW;AACPS,8BAAcF,eAAaA,MAAb,SAAuBP,KAAvB,SAAqCA,KAAnD;AACH,aAFD,MAEO;AACHS,oCAAkBF,MAAlB;AACH;;AAEDG,oBAAQC,GAAR,CAAYF,WAAZ;AACAR,qBAASA,UAAU,KAAnB;AACA,gCAAUA,MAAV,EAAkBQ,WAAlB;AAAA,wEAA+B,iBAAgBG,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,yCAGnBV,OAHmB;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAIJG,WAAWQ,KAAX,CAAiBC,IAAjB,CAAsB,IAAtB,EAA4B,KAAKC,MAAjC,CAJI;;AAAA;AAInBC,0CAJmB;AAAA;AAAA;;AAAA;AAMnBA,6CAASX,WAAWQ,KAAX,CAAiBC,IAAjB,CAAsB,IAAtB,EAA4B,KAAKC,MAAjC,CAAT;;AANmB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AASvBL,4CAAQC,GAAR;AACA,yCAAKM,MAAL,GAAc,GAAd;;AAVuB;;AAa3B,yCAAKC,IAAL,GAAYF,MAAZ;AAb2B;AAAA,2CAcrBJ,IAdqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA/B;;AAAA;AAAA;AAAA;AAAA;AAgBA,mBAAOP,UAAP;AACH,SA5BD;AA6BH,KA9BD;AAgCH","file":"router.js","sourcesContent":["/**\r\n * Created by yao on 2017/6/12.\r\n */\r\nimport koaRouter from \"./koa-router\";\r\n\r\nexport function route(route, method, isAsync = true) {\r\n    return function (target, name, descriptor) {\r\n        setTimeout(function () {//TODO：默认类的实例化会在函数实例化之后，所有这里会加这个东东\r\n            var prefix = target.router && target.router.prefix,\r\n                fixed_route;\r\n            if (route) {\r\n                fixed_route = prefix ? `/${prefix}/${route}` : `/${route}`;\r\n            } else {\r\n                fixed_route = `/${prefix}`;\r\n            }\r\n\r\n            console.log(fixed_route);\r\n            method = method || 'get';\r\n            koaRouter[method](fixed_route, async function (next) {\r\n                var result;\r\n                try {\r\n                    if (isAsync) {\r\n                        result = await descriptor.value.call(this, this.params);\r\n                    } else {\r\n                        result = descriptor.value.call(this, this.params);\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                    this.status = 500;\r\n                }\r\n\r\n                this.body = result;\r\n                await next;\r\n            });\r\n            return descriptor;\r\n        });\r\n    }\r\n\r\n}"]}